name: Build and Commit FFmpeg WASM Core

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-st:
    name: Build Single-Threaded Core
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: .ccache
          key: ${{ runner.os }}-ccache-st-${{ hashFiles('**/Dockerfile', '**/Makefile', 'build/**.sh') }}
          restore-keys: |
            ${{ runner.os }}-ccache-st-
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Cache Docker Layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache-st
          key: ${{ runner.os }}-buildx-st-${{ hashFiles('**/Dockerfile', '**/Makefile', 'build/**.sh') }}
          restore-keys: |
            ${{ runner.os }}-buildx-st-
      - name: Build Single-Thread (ST) Core
        run: make -j build-st EXTRA_ARGS="--cache-from=type=local,src=/tmp/.buildx-cache-st --cache-to=type=local,dest=/tmp/.buildx-cache-st,mode=max"
      - name: Upload ST Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: st-packages
          path: |
            packages/core
            packages/ffmpeg
            packages/util

  build-mt:
    name: Build Multi-Threaded Core
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: .ccache
          key: ${{ runner.os }}-ccache-mt-${{ hashFiles('**/Dockerfile', '**/Makefile', 'build/**.sh') }}
          restore-keys: |
            ${{ runner.os }}-ccache-mt-
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Cache Docker Layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache-mt
          key: ${{ runner.os }}-buildx-mt-${{ hashFiles('**/Dockerfile', '**/Makefile', 'build/**.sh') }}
          restore-keys: |
            ${{ runner.os }}-buildx-mt-
      - name: Build Multi-Thread (MT) Core
        run: make -j build-mt EXTRA_ARGS="--cache-from=type=local,src=/tmp/.buildx-cache-mt --cache-to=type=local,dest=/tmp/.buildx-cache-mt,mode=max"
      - name: Upload MT Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mt-packages
          path: packages/core-mt

  package-and-commit:
    name: Package and Commit Builds
    runs-on: ubuntu-latest
    needs: [build-st, build-mt]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download ST Artifacts
        uses: actions/download-artifact@v4
        with:
          name: st-packages
          path: packages

      - name: Download MT Artifacts
        uses: actions/download-artifact@v4
        with:
          name: mt-packages
          path: packages/core-mt

      - name: Make Scripts Executable
        run: chmod +x scripts/*.sh

      - name: Generate Build Receipt
        run: ./scripts/create_build_receipt.sh

      - name: Organize Build Artifacts
        run: ./scripts/organize_builds.sh

      - name: Commit and Push Builds
        run: ./scripts/commit_builds.sh