#
# build.yml - The Main Build Orchestrator
#
name: Build, Commit, and Release FFmpeg WASM Core

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  # --- Phase 0: Pre-Build Checks ---
  pre-build-checks:
    name: 0. Pre-Build Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      - name: Install Dependencies
        run: npm install
      - name: Run Linter on Safe Packages
        run: npm run lint --workspace=@ffmpeg/util

  # --- Phase 1: Build Binaries (Parallel) ---
  build-wasm-st:
    name: 1a. Build WASM Core (ST)
    needs: pre-build-checks
    uses: ./.github/workflows/reusable-build-wasm.yml
    with:
      target: build-st
      cache_suffix: st
      artifact_name: core-st-pkg
      artifact_path: packages/core

  build-wasm-mt:
    name: 1b. Build WASM Core (MT)
    needs: pre-build-checks
    uses: ./.github/workflows/reusable-build-wasm.yml
    with:
      target: build-mt
      cache_suffix: mt
      artifact_name: core-mt-pkg
      artifact_path: packages/core-mt

  # --- Phase 2: Build JS Wrappers (Parallel) ---
  build-util-esm:
    name: 2a. Build util (ESM)
    needs: pre-build-checks
    uses: ./.github/workflows/reusable-build-js.yml
    with:
      package_name: util
      format: esm
      needs_wasm: false
      artifact_name: util-esm-dist

  build-util-umd:
    name: 2b. Build util (UMD)
    needs: pre-build-checks
    uses: ./.github/workflows/reusable-build-js.yml
    with:
      package_name: util
      format: umd
      needs_wasm: false
      artifact_name: util-umd-dist

  build-ffmpeg-esm:
    name: 2c. Build ffmpeg (ESM)
    needs:
      - build-wasm-st
      - build-util-esm
      - build-util-umd
    uses: ./.github/workflows/reusable-build-js.yml
    with:
      package_name: ffmpeg
      format: esm
      needs_wasm: true
      wasm_artifact_name: core-st-pkg
      artifact_name: ffmpeg-esm-dist

  build-ffmpeg-umd:
    name: 2d. Build ffmpeg (UMD)
    needs:
      - build-wasm-st
      - build-util-esm
      - build-util-umd
    uses: ./.github/workflows/reusable-build-js.yml
    with:
      package_name: ffmpeg
      format: umd
      needs_wasm: true
      wasm_artifact_name: core-st-pkg
      artifact_name: ffmpeg-umd-dist

  # --- Phase 3: Finalize (Package, Commit, and Release) ---
  finalize:
    name: 3. Finalize - Package, Commit, and Release
    runs-on: ubuntu-latest
    needs:
      - build-wasm-st
      - build-wasm-mt
      - build-util-esm
      - build-util-umd
      - build-ffmpeg-esm
      - build-ffmpeg-umd
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download All Build Artifacts
        uses: actions/download-artifact@v4

      - name: Verify Directory Structure
        run: ls -R

      - name: Make Scripts Executable
        run: chmod +x scripts/*.sh

      - name: Package All Components
        run: |
          ./scripts/package-core.sh
          ./scripts/package-core-mt.sh
          ./scripts/package-util.sh
          ./scripts/package-ffmpeg.sh

      - name: Commit and Push Builds
        run: ./scripts/commit_builds.sh

      - name: Create and Publish Release
        run: ./scripts/create_release.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}